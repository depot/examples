const { depot } = require("@depot/sdk-node");
const { exec } = require("child_process");

const headers = {
  Authorization: `Bearer ${process.env.DEPOT_TOKEN}`,
};

async function runBuild(projectID, outputOption, imageTag) {
  const result = await depot.build.v1.BuildService.createBuild(
    {
      projectId: projectID,
    },
    { headers }
  );

  /*
    Execute Depot CLI binary to run build using the build ID and build token
    that were generated by the createBuild API call.

    Output options:
    - --load: Load the image into local Docker daemon
    - --save: Save the image to Depot's ephemeral registry
    - --push: Push the image to an external registry (requires --tag)
    - (none): Build only, no output
  */
  let buildCommand = "depot build";

  if (outputOption === "load") {
    buildCommand += " --load";
  } else if (outputOption === "save") {
    buildCommand += " --save";
  } else if (outputOption === "push") {
    if (!imageTag) {
      console.error(
        "Error: --push requires an image tag. Usage: node create-build.js <project-id> push <image-tag>"
      );
      process.exit(1);
    }
    buildCommand += ` --push --tag ${imageTag}`;
  }

  buildCommand += " .";

  exec(
    buildCommand,
    {
      env: {
        ...process.env,
        DEPOT_PROJECT_ID: projectID,
        DEPOT_BUILD_ID: result.buildId,
        DEPOT_TOKEN: result.buildToken,
      },
    },
    (error, stdout, stderr) => {
      if (error) {
        console.error(`Error executing the binary: ${error}`);
        return;
      }

      console.log(`stdout:\n${stdout}`);
      console.error(`stderr:\n${stderr}`);
    }
  );
}

const args = process.argv.slice(2);
const projectID = args[0];
const outputOption = args[1]; // 'load', 'save', 'push', or undefined
const imageTag = args[2]; // required when outputOption is 'push'

if (!projectID) {
  console.error("Usage: node create-build.js <project-id> [load|save|push] [image-tag]");
  console.error("\nExamples:");
  console.error("  node create-build.js abc123                           # Build only");
  console.error("  node create-build.js abc123 load                      # Build and load to Docker");
  console.error("  node create-build.js abc123 save                      # Build and save to Depot registry");
  console.error("  node create-build.js abc123 push docker.io/user/app:latest  # Build and push to external registry");
  process.exit(1);
}

runBuild(projectID, outputOption, imageTag);
